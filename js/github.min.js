!function(e,t){"function"==typeof define&&define.amd?define(["underscore"],t):"object"==typeof exports?module.exports=t(require("underscore")):e.Github=t(e._)}(this,function(e){var t={};t.version="0.1.3";var n="https://api.github.com/";t.userProfile=function(e){if(e=i.initialize(e,["username","selector"],0)){var t=n+"users/"+e.username;i.getData(t,e,i.getUserProfileHTML)}else console.error("Parameters not passed correctly")},t.repoProfile=function(e){if(e=i.initialize(e,["username","selector","reponame"],0)){var t=n+"repos/"+e.username+"/"+e.reponame;i.getData(t,e,i.getRepoProfileHTML)}else console.error("Parameters not passed correctly")},t.orgProfile=function(e){if(e=i.initialize(e,["orgname","selector"],0)){var t=n+"orgs/"+e.orgname;i.getData(t,e,i.getOrgProfileHTML)}else console.error("Parameters not passed correctly")},t.userActivity=function(e){if(e=i.initialize(e,["username","selector"],1)){var t=n+"users/"+e.username,r=t+"/events";i.getData(t,e,i.getUserProfileHTML),i.getData(r,e,i.getPublicActivityHTML)}else console.error("Parameters not passed correctly")},t.onlyuserActivity=function(e){if(e=i.initialize(e,["username","selector"],1)){var t=n+"users/"+e.username,r=t+"/events";i.getData(r,e,i.getPublicActivityHTML)}else console.error("Parameters not passed correctly")},t.repoActivity=function(e){if(e=i.initialize(e,["username","selector","reponame"],1)){var t=n+"repos/"+e.username+"/"+e.reponame,r=t+"/events";i.getData(t,e,i.getRepoProfileHTML),i.getData(r,e,i.getPublicActivityHTML)}else console.error("Parameters not passed correctly")},t.orgActivity=function(e){if(e=i.initialize(e,["orgname","selector"],1)){var t=n+"orgs/"+e.orgname,r=t+"/events";i.getData(t,e,i.getOrgProfileHTML),i.getData(r,e,i.getPublicActivityHTML)}else console.error("Parameters not passed correctly")};var r={parentTpl:'<div class="gt-container"><%if(type){%><div class="gt-activity-cnt gt-scrollbar"><div class="gt-loading-txt">Loading..</div></div><%}%></div>',userProfileTpl:'<div class="gt-usr-avatar"><a target="_blank" href="<%= html_url%>"><div class="gt-usr-img" style="background-image: url(<%= avatar_url%>)"> </div></a></div><div class="gt-usr-name"><span class="user-name"><%= name%></span><a target="_blank" href="<%= html_url%>"><span class="user-login"><%= login%></span></a></div><div class="gt-usr-details"><div class="gt-usr-repo"><a target="_blank" href="<%= html_url%>"><span class="gt-usr-txt"><%= public_repos%></span><span class="gt-usr-dt">Repositories</span></a></div><div class="gt-usr-folwr"><a target="_blank" href="<%= html_url + "/followers"%>"><span class="gt-usr-txt"><%= followers%></span><span class="gt-usr-dt">Followers</span></a></div><div class="gt-usr-folng"><a target="_blank" href="<%= html_url + "/following"%>"><span class="gt-usr-txt"><%= following%></span><span class="gt-usr-dt">Following</span></a></div></div>',repoProfileTpl:'<div class="gt-usr-name"><span class="user-name"><%= name%></span><a target="_blank" href="<%= owner.html_url%>"><span class="user-login"><%= owner.login%></span></a><p><%= description%></p></div><div class="gt-repo-details"><div class="gt-usr-repo"><a target="_blank" href="<%= html_url%>"><span class="gt-usr-txt"><%= stargazers_count%></span><span class="gt-usr-dt">Stars</span></a></div><div class="gt-usr-folwr"><a target="_blank" href="<%= html_url %>"><span class="gt-usr-txt"><%= subscribers_count%></span><span class="gt-usr-dt">Watchers</span></a></div><div class="gt-usr-folng"><a target="_blank" href="<%= html_url %>"><span class="gt-usr-txt"><%= forks_count%></span><span class="gt-usr-dt">Forks</span></a></div><div class="gt-repo-lg-stat"></div></div>',orgProfileTpl:'<div class="gt-org-avatar"><a target="_blank" href="<%= html_url%>"><div class="gt-org-img" style="background-image: url(<%= avatar_url%>)"> </div></a></div><div class="gt-org-name"><span class="user-name"><%= name%></span><%if(blog){%><a target="_blank" href="<%= blog%>" class="gt-org-link"><span class="user-login">Website</span></a><%}%><%if(email){%><a target="_blank" href="mailto:<%= email%>" class="gt-org-link"><span class="user-login">Email</span></a><%}%><br><span class="gt-org-repos"><%= public_repos%></span><span class="gt-org-repos"> Public Repositories</span></div>',gitActivityTpl:'<div class="gt-activity <%=type%>"><div class="gt-avatar-cnt"><a target="_blank" href="https://github.com/<%= actor.login%>"><img src="<%=actor.avatar_url%>" class="gt-usr-avatar"></a></div><div class="gt-act-cnt"><div title="<%= created_at%>" class="gt-time-cnt"><div class="gt-time-str"><%= timeString%></div></div><%= userLink%><%= message%></div><div class="gt-clearfix"></div></div>',CommitCommentEvent:"<span> commented on commit <%= commentLink%> </span><p><%= payload.comment.body%></p>",CreateEvent:"<span> created <%= payload.ref_type%> <%= branchLink%> at <%= repoLink%> </span>",DeleteEvent:"<span> deleted <%= payload.ref%> <%= payload.ref_type%> at <%= repoLink%> </span>",ForkEvent:"<span> forked <%= repoLink%> to <%= forkLink%> </span>",GollumEvent:"<span> <%= actionType%> the <%= repoLink%> wiki</span><p><%= wikiMessage%></p>",IssueCommentEvent:"<span> commented on issue <%= commentLink%> </span><p><%= payload.comment.body%></p>",IssuesEvent:"<span> <%= payload.action%> issue <%= issueUrl%> </span>",MemberEvent:"<span> added <%= memberLink%> to <%= repoLink%> </span>",PublicEvent:"<span> open sourced <%= repoLink%> </span>",PullRequestEvent:'<span> <%= payload.action%> pull request <%= mergeRequestUrl%> </span><p><%= payload.pull_request.title%></p><p class="pull-req-info"><%= payload.pull_request.commits%><%if(payload.pull_request.commits > 1){%> commits <%}else{%> commit <%}%> with <%= payload.pull_request.changed_files%> <%if(payload.pull_request.commits > 1){%> files <%}else{%> file <%}%> changed.</p>',PullRequestReviewCommentEvent:"<span> commented on pull request <%= pullCommentUrl%> </span><p><%= payload.comment.body%></p>",PushEvent:"<span> pushed to <%= branchLink%> at <%= repoLink%> </span><%= commitsHtml%>",ReleaseEvent:"<span> released <%= tagLink%> at <%= repoLink%> </span><br><%= zipLink%>",WatchEvent:"<span> starred <%= repoLink%> </span>",noActivityTpl:'<div class="gt-no-activity"><span> There are no public events for this account in past 90 days. </span></div>',notFoundTpl:'<div class="gt-no-activity"><span> This account does not exist. </span></div>'},i={initialize:function(e,t,n){for(var a=0;a<t.length;a++)if(!e[t[a]])return!1;return i.renderContent(i.getRenderedHTML(r.parentTpl,{type:n}),e.selector),e.limit=i.setLimit(e.limit),e},checkInteger:function(e){return e===parseInt(e,10)?!0:!1},getRenderedHTML:function(t,n){return n?e.template(t)(n):e.template(t)()},getUserProfileHTML:function(e,t){i.renderContent(i.getRenderedHTML(r.userProfileTpl,e),t.selector,".gt-header")},getRepoProfileHTML:function(e,t){var a=n+"repos/"+t.username+"/"+t.reponame+"/languages";i.renderContent(i.getRenderedHTML(r.repoProfileTpl,e),t.selector,".gt-header"),i.getData(a,t,i.getLanguageHTML)},getOrgProfileHTML:function(e,t){i.renderContent(i.getRenderedHTML(r.orgProfileTpl,e),t.selector,".gt-header")},getPublicActivityHTML:function(e,t){var n="",a=t.limit<e.length?t.limit:e.length;if(0==a)n+=i.getRenderedHTML(r.noActivityTpl);else for(var s=0;a>s;s++){var o=e[s],l=o.payload;switch(o.timeString=i.millisecondsToStr(new Date-new Date(o.created_at)),o.userLink=i.getGitHubLink(o.actor.login,o.actor.login),o.repoLink=i.getGitHubLink(o.repo.name,o.repo.name),o.branchLink="",l.ref&&("refs/heads/"===l.ref.substring(0,11)?o.branch=l.ref.substring(11):o.branch=l.ref,o.branchLink=i.getGitHubLink(o.repo.name+"/tree/"+o.branch,o.branch)),o.type){case"CommitCommentEvent":o.commentLink=i.getLink(l.comment.html_url,o.repo.name+"@"+l.comment.commit_id.substring(0,6));break;case"CreateEvent":break;case"DeleteEvent":break;case"ForkEvent":o.forkLink=i.getGitHubLink(l.forkee.html_url,l.forkee.full_name);break;case"GollumEvent":var u=l.pages[0];o.actionType=u.action,o.wikiMessage=o.actionType.charAt(0).toUpperCase()+o.actionType.slice(1)+" ",o.wikiMessage+=i.getLink(u.html_url,u.title);break;case"IssueCommentEvent":o.commentLink=i.getLink(l.comment.html_url,o.repo.name+"#"+l.issue.number);break;case"IssuesEvent":o.issueUrl=i.getLink(l.issue.html_url,o.repo.name+"#"+l.issue.number);break;case"MemberEvent":o.memberLink=i.getGitHubLink(l.member.login,l.member.login);break;case"PublicEvent":break;case"PullRequestEvent":o.mergeRequestUrl=i.getLink(l.pull_request.html_url,o.repo.name+"#"+l.pull_request.number);break;case"PullRequestReviewCommentEvent":o.pullCommentUrl=i.getLink(l.comment.html_url,o.repo.name+"#"+l.pull_request.number);break;case"PushEvent":o.commitsHtml=i.getCommitsHTML(o);break;case"ReleaseEvent":o.tagLink=i.getLink(l.release.html_url,l.release.tag_name),o.zipLink=i.getLink(l.release.zipball_url,"Download Source Code (zip)");break;case"WatchEvent":}o.message=i.getRenderedHTML(r[o.type],o),n+=i.getRenderedHTML(r.gitActivityTpl,o)}i.renderContent(n,t.selector,".gt-activity-cnt")},getCommitsHTML:function(e){var n,r,a,s,o,t='<ul class="gt-commit-list">',l="",u=e.payload,c=u.commits.length,f=u.before+"..."+u.head;for(o=0;c>o&&!(o>1);o++)s=u.commits[o],n='<li class="gt-commit-item" >',r=i.getGitHubLink(e.repo.name+"/commit/"+s.sha,s.sha.substring(0,6)),a='<span class="gt-commit-msg">'+s.message.substring(0,150)+"</span>",n+=r,n+=a,n+="</li>",t+=n;return 2===c?l=i.getGitHubLink(e.repo.name+"/compare/"+f,"View comparison for these 2 commits &raquo;","gt-compare-link"):c>2&&(l=i.getGitHubLink(e.repo.name+"/compare/"+f,c-2+" more "+i.getPluralWord(c-2,"commit")+" &raquo;","gt-compare-link")),t+="</ul>",t+=l},getData:function(e,t,n){var a,s;s=new XMLHttpRequest,s.open("GET",e,!0),t.OAuth&&s.setRequestHeader("Authorization","Token "+t.OAuth),s.onload=function(e){s.status>=200&&s.status<400?(a=JSON.parse(s.responseText),n(a,t)):(i.renderContent(i.getRenderedHTML(r.notFoundTpl,a),t.selector,".gt-container"),console.error("An error occurred while connecting to GitHub API."))},s.onerror=function(e){console.error("An error occurred while connecting to GitHub API.")},s.send()},getLink:function(e,t,n){return t||(t=e),"undefined"==typeof n&&(n=""),i.getRenderedHTML('<a class="'+n+'" href="<%=url%>" target="_blank"><%=title%></a>',{url:e,title:t})},getGitHubLink:function(e,t,n){return t||(t=e),"undefined"==typeof n&&(n=""),i.getLink("https://github.com/"+e,t,n)},getPluralWord:function(e,t){return 1!==e?t+"s":t},getLanguageHTML:function(t,n){var s,r=[],a=0,o="";e.each(t,function(e,t){var n={};n.language=t,n.size=e,r.push(n),a+=e}),r=r.sort(function(e,t){return t.size-e.size}),e.each(r,function(e){s=(parseInt(e.size)/a*100).toFixed(1),o+='<div class="gt-repo-lg-cnt" style="width: '+s+"%; background: #"+i.getRandomColor()+'; " > <div class="gt-repo-lg-name" data-title="'+e.language+" ("+s+'%)"> </div> </div>'}),i.renderContent(o,n.selector,".gt-repo-lg-stat")},getRandomColor:function(){return Math.random().toString(16).substring(2,8)},millisecondsToStr:function(e){function t(e){return e>1?"s ago":" ago"}var n=Math.floor(e/1e3),r=Math.floor(n/31536e3);if(r)return r+" year"+t(r);var i=Math.floor((n%=31536e3)/2592e3);if(i)return i+" month"+t(i);var a=Math.floor((n%=2592e3)/86400);if(a)return a+" day"+t(a);var s=Math.floor((n%=86400)/3600);if(s)return"about "+s+" hour"+t(s);var o=Math.floor((n%=3600)/60);if(o)return o+" minute"+t(o);var l=n%60;return l?l+" second"+t(l):"just now"},renderContent:function(e,t,n){for(var r=document.querySelectorAll(t),i=0;i<r.length;i++)n?selectorDiv=r[i].querySelector(n):selectorDiv=r[i],selectorDiv.innerHTML=e},setLimit:function(e){var t;return t="undefined"!==e&&i.checkInteger(t=parseInt(e,10))?t>30?30:t:30}};return t});
